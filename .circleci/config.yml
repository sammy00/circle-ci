version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.9
    steps:
      - checkout
      - run: echo "hello world"
      - run: echo "welcome nu00"
      - run: go test -v ./...
      - run: |
          echo ${CIRCLE_SHA1}
          echo $(git log --pretty=format:%s -n 1 ${CIRCLE_SHA1})
  doc:
    docker:
      - image: circleci/golang:1.10
    environment:
      - GH_USER: nu00
      - GH_EMAIL: xiangminli00@qq.com
    steps:
      - checkout
      - run: |
          commitDesc=$(git log --pretty=format:%s -n 1)

          if ! [[ ${commitDesc} =~ ^.*\[doc\]$ ]]; then 
            exit 0
          fi

          git config --global user.email ${GH_EMAIL}
          git config --global user.name ${GH_USER}

          echo 'making doc'

          rm -rf build
          mkdir build
          echo "deply hello ${CIRCLE_SHA1}" >> build/doc.txt

          git add -A
          git commit -m "hello deploy"
          git push origin master

          echo 'done making doc' 
  artifacting:
    docker:
      - image: golang:1.10
    environment:
      - GH_USER: nu00
      - GH_EMAIL: xiangminli00@qq.com
    steps:
        - checkout
        - run: go test -v ./...
        - run:
            name: dummy artifacting
            command: |
              echo "hello artifact" > /tmp/hello-1
              mkdir /tmp/artifacts
              echo "world artifact" > /tmp/artifacts/hello-2;
        - store_artifacts:
            path: /tmp/artifacts/
            destination: world-2
        - store_artifacts:
            path: /tmp/hello-1
  deploy:
    docker:
      - image: golang:1.10
    environment:
      - GH_USER: nu00
      - GH_EMAIL: xiangminli00@qq.com
    steps:
      - checkout
      - run: |
          rm -rf build
          mkdir build
          echo "deply hello ${CIRCLE_SHA1}" >> build/doc.txt
      - run: |
          git config --global user.email ${GH_EMAIL}
          git config --global user.name ${GH_USER}

          git add -A
          git commit -m "hello deploy"

          git push origin master

workflows:
  version: 2
  build-1-2:
    jobs:
      - build
      - doc
      - artifacting
      - deploy:
          filters:
            branches:
              only: dev